version: '3.5'
services:

  cassandra-service:
    image: cassandra:3.11.4
    container_name: cassandra-service
    ports:
      - "9042:9042"   # Native transport
      - "9160:9160"   # Thrift clients
      - "7199:7199"   # JMX
      - "8778:8778"
    networks:
      - net
    restart: always
    command: "sh /cassandra-init.sh"
    environment:
      - CASSANDRA_CLUSTER_NAME=cassandra-cluster
      - CASSANDRA_SEEDS=cassandra-service
      - CASSANDRA_CONFIG=/tmp
      - CASSANDRA_START_RPC=true
      - CASSANDRA_ROOT_USERNAME=admin
      - CASSANDRA_ROOT_PASSWORD=admin123
      - CASSANDRA_APP_KEYSPACE=testdb
      - CASSANDRA_APP_USERNAME=appuser
      - CASSANDRA_APP_PASSWORD=test123
    volumes:
      - ./data-service/cassandra-config/cassandra-init.sh:/cassandra-init.sh
      - ./data-service/cassandra-config/cassandra.yaml:/tmp/cassandra.yaml
      - ./cassandra/n1data:/var/lib/cassandra
    ulimits:
      memlock: -1
      nproc: 32768
      nofile: 100000

  cassandra1:
    image: cassandra:3.11.4
    container_name: cassandra1
    ports:
      - "9142:9042"
    networks:
      - net
    restart: always
    command: bash -c 'if [ -z "$$(ls -A /var/lib/cassandra/)" ] ; then sleep 60; fi && /docker-entrypoint.sh cassandra -f'
    depends_on:
      - cassandra-service
    environment:
      - CASSANDRA_CLUSTER_NAME=cassandra-cluster
      - CASSANDRA_SEEDS=cassandra-service
      - CASSANDRA_CONFIG=/tmp
    volumes:
      - ./data-service/cassandra-config/cassandra.yaml:/tmp/cassandra.yaml
      - ./cassandra/n2data:/var/lib/cassandra
    ulimits:
      memlock: -1
      nproc: 32768
      nofile: 100000

  cassandra2:
    image: cassandra:3.11.4
    container_name: cassandra2
    ports:
      - "9242:9042"
    networks:
      - net
    restart: always
    command: bash -c 'if [ -z "$$(ls -A /var/lib/cassandra/)" ] ; then sleep 120; fi && /docker-entrypoint.sh cassandra -f'
    depends_on:
      - cassandra-service
    environment:
      - CASSANDRA_CLUSTER_NAME=cassandra-cluster
      - CASSANDRA_SEEDS=cassandra-service
      - CASSANDRA_CONFIG=/tmp
    volumes:
      - ./data-service/cassandra-config/cassandra.yaml:/tmp/cassandra.yaml
      - ./cassandra/n3data:/var/lib/cassandra
    ulimits:
      memlock: -1
      nproc: 32768
      nofile: 100000

  portainer:
    image: portainer/portainer
    networks:
      - net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer-data:/data
    ports:
      - "10001:9000"

  minio-service:
    container_name: minio-service
    image: minio/minio
    ports:
      - "9000:9000"
    networks:
      - net
    restart: always
    volumes:
      - /var/data/minio/data:/data
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: minio server /data

  discovery-service:
    container_name: discovery-service
    build: ./discovery-service
    restart: always
    ports:
      - "8302:8302"
    networks:
      - net
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  storage-service:
    container_name: storage-service
    build: ./storage-service
    restart: always
    depends_on:
      - discovery-service
    ports:
      - "8309:8309"
    networks:
      - net
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  data-service:
    container_name: data-service
    build: ./data-service
    restart: always
    depends_on:
      - cassandra-service
      - discovery-service
    ports:
      - "8300:8300"
    networks:
      - net
    logging:
      options:
        max-size: "10m"
        max-file: "10"

  document-service:
    container_name: document-service
    build: ./document-service
    restart: always
    depends_on:
      - discovery-service
      - storage-service
      - data-service
    ports:
      - "8301:8301"
    networks:
      - net
    logging:
      options:
        max-size: "10m"
        max-file: "10"

networks:
  net:
    driver: bridge
